// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectDipMVC.Models;

namespace ProjectDipMVC.Migrations
{
    [DbContext(typeof(ProjectDipContext))]
    [Migration("20220612140956_Initial_1")]
    partial class Initial_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectDipMVC.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Project_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("date")
                        .HasColumnName("Date_create");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("TitulFile")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Titul_File");

                    b.Property<string>("TitulName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Titul_Name");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectDipMVC.Models.ProjectDescript", b =>
                {
                    b.Property<int>("ProjDscrptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Proj_Dscrpt_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("Project_id");

                    b.Property<string>("SectionName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Section_Name");

                    b.Property<int>("SectionNumber")
                        .HasColumnType("int")
                        .HasColumnName("Section_Number");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ProjDscrptId")
                        .HasName("PK_Proj_Dscrpt");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "SectionNumber", "ProjectId" }, "UQ__Project___E1B3E8144235C593")
                        .IsUnique();

                    b.ToTable("Project_Descript");
                });

            modelBuilder.Entity("ProjectDipMVC.Models.SectionsProject", b =>
                {
                    b.Property<int>("SectionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Sections_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("FileSections")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("File_sections");

                    b.Property<string>("NameFileSections")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Name_File_sections");

                    b.Property<string>("NameSections")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name_sections");

                    b.Property<int?>("NumberSections")
                        .HasColumnType("int")
                        .HasColumnName("Number_sections");

                    b.Property<int?>("ProjDscrptId")
                        .HasColumnType("int")
                        .HasColumnName("Proj_Dscrpt_id");

                    b.HasKey("SectionsId");

                    b.HasIndex("ProjDscrptId");

                    b.HasIndex(new[] { "NumberSections", "ProjDscrptId" }, "UQ__Sections__548CC8E751DBDC58")
                        .IsUnique()
                        .HasFilter("[Number_sections] IS NOT NULL AND [Proj_Dscrpt_id] IS NOT NULL");

                    b.ToTable("Sections_Project");
                });

            modelBuilder.Entity("ProjectDipMVC.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Login")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("login");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectDipMVC.Models.Project", b =>
                {
                    b.HasOne("ProjectDipMVC.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Projects_Users")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectDipMVC.Models.ProjectDescript", b =>
                {
                    b.HasOne("ProjectDipMVC.Models.Project", "Project")
                        .WithMany("ProjectDescripts")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Proj_Dscrpt_Project")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("ProjectDipMVC.Models.User", "User")
                        .WithMany("ProjectDescripts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Proj_Dscrpt_Users")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectDipMVC.Models.SectionsProject", b =>
                {
                    b.HasOne("ProjectDipMVC.Models.ProjectDescript", "ProjDscrpt")
                        .WithMany("SectionsProjects")
                        .HasForeignKey("ProjDscrptId")
                        .HasConstraintName("FK_Proj_Dscrpt");

                    b.Navigation("ProjDscrpt");
                });

            modelBuilder.Entity("ProjectDipMVC.Models.Project", b =>
                {
                    b.Navigation("ProjectDescripts");
                });

            modelBuilder.Entity("ProjectDipMVC.Models.ProjectDescript", b =>
                {
                    b.Navigation("SectionsProjects");
                });

            modelBuilder.Entity("ProjectDipMVC.Models.User", b =>
                {
                    b.Navigation("ProjectDescripts");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
